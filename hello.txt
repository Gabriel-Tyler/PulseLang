// partition the subarray around the pivot,
// which ends up in A[q].
fun partition(A, p, r) {
    var pivot = A[r];
    var i = p - 1;
    for (var j = p; j <= r-1; j = j + 1) {
        if (A[j] < pivot) {
            i = i + 1;
            var t = A[i];
            A[i] = A[j];
            A[j] = t;
        }
    }
    var t = A[i+1];
    A[i+1] = A[r];
    A[r] = t;
    return i + 1;
}

// sort A[p:r]
fun quicksort(A, p, r) {
    if (p < r) {
        var q = partition(A, p, r);
        quicksort(A, p, q-1);
        quicksort(A, q+1, r);
    }
}

var A = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0];
var n = 11;

quicksort(A, 0, n-1);
print A;